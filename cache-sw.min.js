"use strict";let t;async function e(t,e){let a=[...arguments].map(t=>t.headers.get("etag")?.trim().replace(/^W\//,""));return(!a[0]||a[0]!=a[1])&&(!!a.every(t=>t?.length>=34)||!function(t,e){if(t.byteLength!=e.byteLength)return!1;let a=Math.trunc(t.byteLength/4),n=new Uint32Array(t,0,a),i=new Uint32Array(e,0,a);for(let t=0;t<a;t++)if(n[t]!=i[t])return!1;return n=new Uint8Array(t,4*a),i=new Uint8Array(e,4*a),n.every((t,e)=>t==i[e])}(...await Promise.all([...arguments].map(t=>t.clone().arrayBuffer()))))}function a(t){return new URL(t.url).origin==location.origin}let n=new Map;async function i(t,a,n){!n.reload&&await e(t,a)&&(n.reload=!0)}async function r(t){let e=await clients.get(t);e&&await e.navigate(e.url)}async function l(t,e){return new Promise(a=>{setTimeout(()=>{t.petitions--,t.petitions<=0&&(n.delete(e),t.reload&&a(r(e))),a()})})}async function o(t,e){let a=await e.keys(t,{ignoreSearch:!0,ignoreVary:!0});await Promise.all(a.slice(0,-1).map(t=>e.delete(t)))}async function s(t){let e=await t.keys(),a=Math.max(Math.trunc(e.length/2),1);await Promise.all(e.slice(0,a).map(e=>t.delete(e)))}async function c(e,a,n,i){if("QuotaExceededError"!=i.name)throw i;return t||(t=s(e)).finally(()=>setTimeout(()=>{t=null})),await t,e.put(a,n.clone())}async function u(t,e){let a=await Promise.any([t,e]);return a?.status<500&&a||await t||e}async function w(t,e){return e.preloadResponse.then(e=>e||fetch(t)).then(t=>{if(t.status<500)return t;throw null}).catch(()=>fetch(t,{cache:"force-cache"}))}addEventListener("fetch",t=>{let e=t.request;if(!(a(e)||"style"==e.destination))return void("GET"==e.method&&t.respondWith(w(e,t)));let r=a(e),s=w(e,t),h=caches.open("runtime"),y=h.then(t=>t.match(e,{ignoreSearch:r})),f=u(y,s);if(t.respondWith(f.then(t=>t.clone())),r){let e;var d,g=t.resultingClientId||t.clientId,p=(d=g,(e=n.get(d))||(e={petitions:0},n.set(d,e)),e);p.petitions++}t.waitUntil(s.then(async t=>{if(200==t.status){let a=await h;await a.put(e,t.clone()).catch(n=>c(a,e,t,n)),r&&await y&&await Promise.all([i(await f,t,p),o(e,a)])}else"opaque"==t.type?await y||console.error(`${e.url} request is not crossorigin`):t.status<500&&await y&&await (await h).delete(e)}).finally(async()=>{r&&await l(p,g)}))}),addEventListener("activate",t=>t.waitUntil(registration.navigationPreload.enable())),skipWaiting();