"use strict";let t,e;async function a(e){let a;t||(t=hashwasm.createXXHash128());let i=await t;return await e.pipeTo(new WritableStream({write:t=>{a?i.load(a):i.init(),i.update(t),a=i.save()}})),a?i.load(a):i.init(),i.digest("binary")}async function i(t,e){let i=[...arguments].map(t=>t.headers.get("etag")?.trim().replace(/^W\//,""));if(i[0]&&i[0]==i[1])return!1;if(i.every(t=>t?.length>=34))return!0;let n=await Promise.all([...arguments].map(t=>a(t.clone().body)));return n[0].some((t,e)=>t!=n[1][e])}function n(t){return new URL(t.url).origin==location.origin}importScripts("https://cdn.jsdelivr.net/npm/hash-wasm@4.12.0/dist/xxhash128.umd.min.js");let r=new Map;async function s(t,e,a){!a.reload&&await i(t,e)&&(a.reload=!0)}async function l(t){let e=await clients.get(t);e&&await e.navigate(e.url)}async function o(t,e){return new Promise(a=>{setTimeout(()=>{t.petitions--,t.petitions<=0&&(r.delete(e),t.reload&&a(l(e))),a()})})}async function c(t,e){let a=await e.keys(t,{ignoreSearch:!0,ignoreVary:!0});await Promise.all(a.slice(0,-1).map(t=>e.delete(t)))}async function u(t){let e=await t.keys(),a=Math.max(Math.trunc(e.length/2),1);await Promise.all(e.slice(0,a).map(e=>t.delete(e)))}async function w(t,a,i,n){if("QuotaExceededError"!=n.name)throw n;return e||(e=u(t)).finally(()=>setTimeout(()=>{e=null})),await e,t.put(a,i.clone())}async function d(t,e){let a=await Promise.any([t,e]);return a?.status<500&&a||await t||e}async function h(t){return fetch(t).then(t=>{if(t.status<500)return t;throw null}).catch(()=>fetch(t,{cache:"force-cache"}))}addEventListener("fetch",t=>{let e=t.request;if(!(n(e)||"style"==e.destination))return void("GET"==e.method&&t.respondWith(h(e,t)));let a=n(e),i=h(e),l=caches.open("runtime"),u=l.then(t=>t.match(e,{ignoreSearch:a})),m=d(u,i);if(t.respondWith(m.then(t=>t.clone())),a){let e;var p,f=t.resultingClientId||t.clientId,y=(p=f,(e=r.get(p))||(e={petitions:0},r.set(p,e)),e);y.petitions++}t.waitUntil(i.then(async t=>{if(200==t.status){let i=await l;await i.put(e,t.clone()).catch(a=>w(i,e,t,a)),a&&await u&&await Promise.all([s(await m,t,y),c(e,i)])}else"opaque"==t.type?await u||console.error(`${e.url} request is not crossorigin`):t.status<500&&await u&&await (await l).delete(e)}).finally(async()=>{a&&await o(y,f)}))}),addEventListener("activate",t=>t.waitUntil(registration.navigationPreload.disable())),addEventListener("install",t=>t.waitUntil(skipWaiting()));